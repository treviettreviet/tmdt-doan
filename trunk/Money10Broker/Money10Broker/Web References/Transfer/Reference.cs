//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
// 
#pragma warning disable 1591

namespace Money10Broker.Transfer {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsTransferSoap", Namespace="http://tempuri.org/")]
    public partial class wsTransfer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback TransferMoneySameBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferMoneyDiffBankOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsTransfer() {
            this.Url = global::Money10Broker.Properties.Settings.Default.Money10Broker_Transfer_wsTransfer;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event TransferMoneySameBankCompletedEventHandler TransferMoneySameBankCompleted;
        
        /// <remarks/>
        public event TransferMoneyDiffBankCompletedEventHandler TransferMoneyDiffBankCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferMoneySameBank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TransferMoneySameBank(string sid, string ccsend, string ccreceive, decimal amount, string ccsendcurenum, string ccreceivesecurenum) {
            object[] results = this.Invoke("TransferMoneySameBank", new object[] {
                        sid,
                        ccsend,
                        ccreceive,
                        amount,
                        ccsendcurenum,
                        ccreceivesecurenum});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TransferMoneySameBankAsync(string sid, string ccsend, string ccreceive, decimal amount, string ccsendcurenum, string ccreceivesecurenum) {
            this.TransferMoneySameBankAsync(sid, ccsend, ccreceive, amount, ccsendcurenum, ccreceivesecurenum, null);
        }
        
        /// <remarks/>
        public void TransferMoneySameBankAsync(string sid, string ccsend, string ccreceive, decimal amount, string ccsendcurenum, string ccreceivesecurenum, object userState) {
            if ((this.TransferMoneySameBankOperationCompleted == null)) {
                this.TransferMoneySameBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferMoneySameBankOperationCompleted);
            }
            this.InvokeAsync("TransferMoneySameBank", new object[] {
                        sid,
                        ccsend,
                        ccreceive,
                        amount,
                        ccsendcurenum,
                        ccreceivesecurenum}, this.TransferMoneySameBankOperationCompleted, userState);
        }
        
        private void OnTransferMoneySameBankOperationCompleted(object arg) {
            if ((this.TransferMoneySameBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferMoneySameBankCompleted(this, new TransferMoneySameBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferMoneyDiffBank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TransferMoneyDiffBank(string sid, string ccrsend, string ccreceive, float amount, string ccreceivesecurenum) {
            object[] results = this.Invoke("TransferMoneyDiffBank", new object[] {
                        sid,
                        ccrsend,
                        ccreceive,
                        amount,
                        ccreceivesecurenum});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TransferMoneyDiffBankAsync(string sid, string ccrsend, string ccreceive, float amount, string ccreceivesecurenum) {
            this.TransferMoneyDiffBankAsync(sid, ccrsend, ccreceive, amount, ccreceivesecurenum, null);
        }
        
        /// <remarks/>
        public void TransferMoneyDiffBankAsync(string sid, string ccrsend, string ccreceive, float amount, string ccreceivesecurenum, object userState) {
            if ((this.TransferMoneyDiffBankOperationCompleted == null)) {
                this.TransferMoneyDiffBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferMoneyDiffBankOperationCompleted);
            }
            this.InvokeAsync("TransferMoneyDiffBank", new object[] {
                        sid,
                        ccrsend,
                        ccreceive,
                        amount,
                        ccreceivesecurenum}, this.TransferMoneyDiffBankOperationCompleted, userState);
        }
        
        private void OnTransferMoneyDiffBankOperationCompleted(object arg) {
            if ((this.TransferMoneyDiffBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferMoneyDiffBankCompleted(this, new TransferMoneyDiffBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TransferMoneySameBankCompletedEventHandler(object sender, TransferMoneySameBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferMoneySameBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferMoneySameBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TransferMoneyDiffBankCompletedEventHandler(object sender, TransferMoneyDiffBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferMoneyDiffBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferMoneyDiffBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591